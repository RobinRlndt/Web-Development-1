// Function to validate the birthdate inputconst valideerGeboorteDatum = () => {	const txtGeboorteDatum = document.getElementById("txtGeboorteDatum");	const geboorteDatum = txtGeboorteDatum.value.trim();	// Regex to check format yyyy-mm-dd	const regex = /^\d{4}-\d{2}-\d{2}$/;	if (!regex.test(geboorteDatum)) {		reportError(txtGeboorteDatum, "Formaat is niet jjjj-mm-dd");		return false;	}	// Parse date components	const [year, month, day] = geboorteDatum.split('-').map(Number);	// Validate date using Date object	const date = new Date(year, month - 1, day); // Month is zero-based in JS	if (date.getFullYear() !== year || date.getMonth() + 1 !== month || date.getDate() !== day) {		reportError(txtGeboorteDatum, "Ongeldige datum");		return false;	}	// Check if the date is not later than today	const today = new Date();	if (date > today) {		reportError(txtGeboorteDatum, "De geboortedatum mag niet later zijn dan vandaag");		return false;	}	// Check year range (realistic birthdate)	const currentYear = today.getFullYear();	if (year > currentYear || year < currentYear - 120) {		reportError(txtGeboorteDatum, "Jaar moet realistisch zijn");		return false;	}	clearError(txtGeboorteDatum); // Clear any previous error	return true;};// Function to report errorsconst reportError = (element, message) => {	const elementId = element.getAttribute("id"); // e.g., txtGeboorteDatum	const errElementId = "err" + elementId.substring(3); // e.g., errGeboorteDatum	const errElement = document.getElementById(errElementId);	if (errElement) { // Check if error element exists		element.classList.add("invalid"); // Apply invalid class to input field		errElement.textContent = message; // Show error message	} else {		console.error(`Error element with ID ${errElementId} not found.`);	}};// Function to clear errorsconst clearError = (element) => {	const elementId = element.getAttribute("id"); // e.g., txtGeboorteDatum	const errElementId = "err" + elementId.substring(3); // e.g., errGeboorteDatum	const errElement = document.getElementById(errElementId);	if (errElement) { // Check if error element exists		element.classList.remove("invalid"); // Remove invalid class from input field		errElement.textContent = ""; // Clear error message	}};